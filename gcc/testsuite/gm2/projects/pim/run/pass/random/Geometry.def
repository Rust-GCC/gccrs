(* Copyright (C) 2005-2023 Free Software Foundation, Inc. *)
(* This file is part of Chisel.

Chisel is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

Chisel is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License along
with gm2; see the file COPYING.  If not, write to the Free Software
Foundation, 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. *)
DEFINITION MODULE Geometry ;

(*
   Title      : Geometry
   Author     : Gaius Mulley
   Date       : 20/8/88
   LastEdit   : 20/8/88
   System     : LOGITECH MODULA-2/86
   Description: Defines some commonly used geometrical functions.
*)

EXPORT QUALIFIED IsSubLine, IsSubRange, IsIntersectingRange,
                 IntersectionLength, IsPointOnLine,
                 Abs, Min, Max, Swap ;


(*
   IsSubLine - returns true if the range i1..i2 or j1..j2 are ranges
               of each other.
*)

PROCEDURE IsSubLine (i1, i2, j1, j2: CARDINAL) : BOOLEAN ;


(*
   IsSubRange - returns true if i lies inbetween High and Low.
*)

PROCEDURE IsSubRange (Low, High, i: CARDINAL) : BOOLEAN ;


(*
   IsIntersectingRange - returns true if the ranges i1..i2  j1..j2
                         overlap.
*)

PROCEDURE IsIntersectingRange (i1, i2, j1, j2: CARDINAL) : BOOLEAN ;


(*
   IntersectionLength - returns the intersection length
                        of the overlapping ranges i1..i2  j1..j2.
*)

PROCEDURE IntersectionLength (i1, i2, j1, j2: CARDINAL) : CARDINAL ;


(*
   IsPointOnLine - returns true if point x, y is on line (x1, y1) , (x2, y2)
*)

PROCEDURE IsPointOnLine (x, y: CARDINAL; x1, y1, x2, y2: CARDINAL) : BOOLEAN ;


(*
   Max - returns the largest cardinal number from i and j.
*)

PROCEDURE Max (i, j: CARDINAL) : CARDINAL ;


(*
   Min - returns the smallest cardinal number from i and j.
*)

PROCEDURE Min (i, j: CARDINAL) : CARDINAL ;


(*
   Abs - returns the difference between i and j.
*)

PROCEDURE Abs (i, j: CARDINAL) : CARDINAL ;


(*
   Swap - swaps two cardinal numbers i and j.
*)

PROCEDURE Swap (VAR i, j: CARDINAL) ;


END Geometry.
