2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vloxei64-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei64-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei64-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei64_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vloxei32-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei32-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei32-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei32_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vloxei16-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei16-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei16-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei16_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vloxei8-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei8-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei8-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vloxei8_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vluxei64-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei64-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei64-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei64_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vluxei32-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei32-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei32-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei32_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vluxei16-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei16-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei16-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei16_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vluxei8-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei8-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei8-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_mu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_mu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_mu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tu-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tum-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tum-3.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tumu-2.C: New test.
	* g++.target/riscv/rvv/base/vluxei8_tumu-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vsuxei16-1.C: New test.
	* g++.target/riscv/rvv/base/vsuxei16-2.C: New test.
	* g++.target/riscv/rvv/base/vsuxei16-3.C: New test.
	* g++.target/riscv/rvv/base/vsuxei32-1.C: New test.
	* g++.target/riscv/rvv/base/vsuxei32-2.C: New test.
	* g++.target/riscv/rvv/base/vsuxei32-3.C: New test.
	* g++.target/riscv/rvv/base/vsuxei64-1.C: New test.
	* g++.target/riscv/rvv/base/vsuxei64-2.C: New test.
	* g++.target/riscv/rvv/base/vsuxei64-3.C: New test.
	* g++.target/riscv/rvv/base/vsuxei8-1.C: New test.
	* g++.target/riscv/rvv/base/vsuxei8-2.C: New test.
	* g++.target/riscv/rvv/base/vsuxei8-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vsuxei16_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei16_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei16_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei16_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei16_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei16_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei32_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei64_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsuxei8_v_m-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vsoxei16_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei16_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei16_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei16_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei16_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei16_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei32_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei64_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsoxei8_v_m-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vsoxei32-1.C: New test.
	* g++.target/riscv/rvv/base/vsoxei32-2.C: New test.
	* g++.target/riscv/rvv/base/vsoxei32-3.C: New test.
	* g++.target/riscv/rvv/base/vsoxei64-1.C: New test.
	* g++.target/riscv/rvv/base/vsoxei64-2.C: New test.
	* g++.target/riscv/rvv/base/vsoxei64-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vsoxei16-1.C: New test.
	* g++.target/riscv/rvv/base/vsoxei16-2.C: New test.
	* g++.target/riscv/rvv/base/vsoxei16-3.C: New test.
	* g++.target/riscv/rvv/base/vsoxei8-1.C: New test.
	* g++.target/riscv/rvv/base/vsoxei8-2.C: New test.
	* g++.target/riscv/rvv/base/vsoxei8-3.C: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vluxei64_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei64_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vluxei32_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei32_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vluxei16_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei16_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vluxei8_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vluxei8_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vloxei64_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei64_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vloxei32_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei32_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vloxei16_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei16_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vloxei8_v-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vloxei8_v_tumu-3.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vlxei-vsxei-constraint-1.c: New test.

2023-01-30  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/avl_single-72.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-76.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-77.c: New test.

2023-01-30  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	* gm2/warnings/returntype/fail/warnings-returntype-fail.exp: Save,
	restore TORTURE_OPTIONS.

2023-01-30  Andrew Pinski  <apinski@marvell.com>

	PR tree-optimization/108582
	* gcc.dg/pr108582-1.c: New test.

2023-01-30  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108574
	* gcc.dg/torture/pr108574-1.c: New testcase.
	* gcc.dg/torture/pr108574-2.c: Likewise.
	* gcc.dg/torture/pr108574-3.c: Likewise.

2023-01-29  Mikael Morin  <mikael@gcc.gnu.org>

	PR fortran/108450
	* gfortran.dg/gomp/minmaxloc_1.f90: New test.

2023-01-29  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	PR fortran/103506
	* gfortran.dg/pr103506_1.f90: New test.

2023-01-29  Jan Hubicka  <hubicka@ucw.cz>

	* gcc.dg/ipa/ipa-sra-30.c: New test.
	* gcc.dg/ipa/ipa-sra-31.c: New test.
	* gcc.dg/tree-ssa/modref-dse-7.c: New test.

2023-01-28  Harald Anlauf  <anlauf@gmx.de>
	    Steven G. Kargl  <kargl@gcc.gnu.org>

	PR fortran/108527
	* gfortran.dg/pr108527.f90: New test.

2023-01-28  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108453
	* gfortran.dg/common_27.f90: New test.

2023-01-28  Jonathan Yong  <10walls@gmail.com>

	PR c/108192
	* g++.dg/cet-notrack-1.C: Use puts instead of printf,
	so function call is not mangled by __mingw_printf when
	doing assembly symbol inspection.

2023-01-28  Jonathan Yong  <10walls@gmail.com>

	PR c/108150
	* gcc.dg/attr-aligned.c: Make errors emitted on Windows
	target same as on Linux.

2023-01-28  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vlse-1.C: New test.
	* g++.target/riscv/rvv/base/vlse_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vlse_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vlse_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vsse-1.C: New test.
	* gcc.target/riscv/rvv/base/vlse-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse-3.c: New test.
	* gcc.target/riscv/rvv/base/vlse-vsse-constraint-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vlse_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vlse_tumu-3.c: New test.
	* gcc.target/riscv/rvv/base/vsse-1.c: New test.
	* gcc.target/riscv/rvv/base/vsse-2.c: New test.
	* gcc.target/riscv/rvv/base/vsse-3.c: New test.
	* gcc.target/riscv/rvv/base/vsse_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vsse_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vsse_m-3.c: New test.

2023-01-28  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	* gfortran.dg/ISO_Fortran_binding_17.f90: Replace (\n|\r\n|\r)
	with (\r*\n+).
	* gfortran.dg/array_temporaries_2.f90: Likewise.
	* gfortran.dg/bind-c-contiguous-1.f90: Likewise.
	* gfortran.dg/bind-c-contiguous-4.f90: Likewise.
	* gfortran.dg/bind-c-contiguous-5.f90: Likewise.
	* gfortran.dg/fmt_error_4.f90: Likewise.
	* gfortran.dg/fmt_error_5.f90: Likewise.
	* gfortran.dg/fmt_float.f90: Likewise.
	* gfortran.dg/fmt_l.f90: Likewise.
	* gfortran.dg/fmt_nonchar_2.f90: Likewise.
	* gfortran.dg/fmt_zero_precision.f90: Likewise.
	* gfortran.dg/g77/f77-edit-apostrophe-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-colon-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-h-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-i-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-s-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-slash-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-t-out.f: Likewise.
	* gfortran.dg/g77/f77-edit-x-out.f: Likewise.
	* gfortran.dg/namelist_40.f90: Likewise.
	* gfortran.dg/namelist_47.f90: Likewise.
	* gfortran.dg/namelist_print_1.f: Likewise.
	* gfortran.dg/parameter_array_dummy.f90: Likewise.

2023-01-27  Gaius Mulley  <gaiusmod2@gmail.com>

	* gm2/pim/fail/empty.mod: New test.

2023-01-27  Joseph Myers  <joseph@codesourcery.com>

	* gcc.dg/c2x-auto-1.c, gcc.dg/c2x-auto-3.c: Expect braces around
	auto initializers to be disallowed.

2023-01-27  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.dg/vect/complex/fast-math-bb-slp-complex-add-pattern-half-float.c:
	Remove XFAIL.
	* gcc.dg/vect/complex/fast-math-complex-add-half-float.c: Fix names
	of dump files.

2023-01-27  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/simd/vfma_f64.c: Use a wrapper function
	rather than an asm barrier.
	* gcc.target/aarch64/simd/vfms_f64.c: Likewise.
	* gcc.target/aarch64/simd/vmul_f64_1.c: Use a wrapper function
	rather than volatile.
	* gcc.target/aarch64/simd/vmul_n_f64_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmlalh_laneq_s16_1.c: Use a wrapper
	function.  Remove -fno-inline.
	* gcc.target/aarch64/simd/vqdmlals_laneq_s32_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmlslh_laneq_s16_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmlsls_laneq_s32_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmulhh_lane_s16.c: Likewise.
	* gcc.target/aarch64/simd/vqdmulhh_laneq_s16_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmulhs_laneq_s32_1.c: Likewise.
	* gcc.target/aarch64/simd/vqrdmulhh_lane_s16.c: Likewise.
	* gcc.target/aarch64/simd/vqrdmulhh_laneq_s16_1.c: Likewise.
	* gcc.target/aarch64/simd/vqrdmulhs_lane_s32.c: Likewise.
	* gcc.target/aarch64/simd/vqrdmulhs_laneq_s32_1.c: Likewise.
	* gcc.target/aarch64/simd/vqdmulhs_lane_s32.c: Likewise.
	Allow the scalar form to be used when operating on lane 0.
	Add a test for lane 1.

2023-01-27  Richard Sandiford  <richard.sandiford@arm.com>

	PR tree-optimization/96373
	* gcc.target/aarch64/sve/cond_xorsign_1.c: New test.
	* gcc.target/aarch64/sve/cond_xorsign_2.c: Likewise.

2023-01-27  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/sve/cond_asrd_1.c: Tune for a 256-bit
	vector length.
	* gcc.target/aarch64/sve/cond_cnot_4.c: Likewise.
	* gcc.target/aarch64/sve/cond_cnot_6.c: Likewise.
	* gcc.target/aarch64/sve/cond_unary_5.c: Likewise.
	* gcc.target/aarch64/sve/cond_unary_6.c: Likewise.
	* gcc.target/aarch64/sve/cond_uxt_5.c: Likewise.
	* gcc.target/aarch64/sve/vcond_4_costly.c: Remove XFAILs.

2023-01-27  Andrew MacLeod  <amacleod@redhat.com>

	PR tree-optimization/108306
	* gcc.dg/pr108306.c: New.

2023-01-27  Andrew MacLeod  <amacleod@redhat.com>

	PR tree-optimization/108447
	* gcc.dg/pr108447.c: New.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/avl_multiple-7.c: Fix testcase check.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-8.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-18.c: Ditto.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vle-1.C: New test.
	* g++.target/riscv/rvv/base/vle_tu-1.C: New test.
	* g++.target/riscv/rvv/base/vle_tum-1.C: New test.
	* g++.target/riscv/rvv/base/vle_tumu-1.C: New test.
	* g++.target/riscv/rvv/base/vse-1.C: New test.
	* g++.target/riscv/rvv/base/riscv_vector.h: New.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vse-1.c: New test.
	* gcc.target/riscv/rvv/base/vse-2.c: New test.
	* gcc.target/riscv/rvv/base/vse-3.c: New test.
	* gcc.target/riscv/rvv/base/vse_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vse_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vse_m-3.c: New test.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vle-1.c: New test.
	* gcc.target/riscv/rvv/base/vle-2.c: New test.
	* gcc.target/riscv/rvv/base/vle-3.c: New test.
	* gcc.target/riscv/rvv/base/vle_m-1.c: New test.
	* gcc.target/riscv/rvv/base/vle_m-2.c: New test.
	* gcc.target/riscv/rvv/base/vle_m-3.c: New test.
	* gcc.target/riscv/rvv/base/vle_mu-1.c: New test.
	* gcc.target/riscv/rvv/base/vle_mu-2.c: New test.
	* gcc.target/riscv/rvv/base/vle_mu-3.c: New test.
	* gcc.target/riscv/rvv/base/vle_tu-1.c: New test.
	* gcc.target/riscv/rvv/base/vle_tu-2.c: New test.
	* gcc.target/riscv/rvv/base/vle_tu-3.c: New test.
	* gcc.target/riscv/rvv/base/vle_tum-1.c: New test.
	* gcc.target/riscv/rvv/base/vle_tum-2.c: New test.
	* gcc.target/riscv/rvv/base/vle_tum-3.c: New test.
	* gcc.target/riscv/rvv/base/vle_tumu-1.c: New test.
	* gcc.target/riscv/rvv/base/vle_tumu-2.c: New test.
	* gcc.target/riscv/rvv/base/vle_tumu-3.c: New test.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* g++.target/riscv/rvv/base/vsm-1.C: New test.
	* g++.target/riscv/rvv/rvv.exp: New test.
	* gcc.target/riscv/rvv/base/vlm_vsm-1.c: New test.
	* gcc.target/riscv/rvv/base/vlm_vsm-2.c: New test.
	* gcc.target/riscv/rvv/base/vlm_vsm-3.c: New test.

2023-01-27  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/avl_single-14.c: Adjust for final implementation.
	* gcc.target/riscv/rvv/vsetvl/avl_single-23.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-30.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-44.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-47.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-50.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-51.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-6.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-65.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-66.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-67.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-68.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-70.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-71.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_single-9.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-2.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-3.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-4.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-4.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-5.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-13.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-13.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-14.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-15.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-16.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-21.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-22.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-23.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-24.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-5.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-6.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-7.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-8.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-1.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-6.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-1.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-10.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-11.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-12.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-13.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-14.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-2.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-3.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-4.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-5.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-6.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-7.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-8.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_miss_default-9.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-10.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-14.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-15.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-16.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_multiple-9.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-73.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-74.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-75.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-14.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-15.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-16.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-17.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-18.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-19.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-20.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvl-9.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-14.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-15.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-16.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-17.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-18.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-19.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-20.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/vsetvlmax-9.c: New test.

2023-01-27  Xi Ruoyao  <xry111@xry111.site>

	* gcc.dg/pr95115.c (x): Add noipa attribute.

2023-01-27  Jakub Jelinek  <jakub@redhat.com>

	PR ipa/106061
	* gcc.dg/pr106061.c: New test.

2023-01-27  Tobias Burnus  <tobias@codesourcery.com>

	* gfortran.dg/gomp/declare-variant-10.f90: Update scan-tree's
	target selector to handle Windows.
	* gfortran.dg/gomp/declare-variant-11.f90: Likewise.
	* gfortran.dg/gomp/declare-variant-12.f90: Likewise.

2023-01-26  Gaius Mulley  <gaiusmod2@gmail.com>

	* gm2/warnings/returntype/fail/badreturn.mod: New test.
	* gm2/warnings/returntype/fail/warnings-returntype-fail.exp:
	New test.
	* gm2/warnings/returntype/pass/Termbase.mod: New test.
	* gm2/warnings/returntype/pass/goodreturn.mod: New test.
	* gm2/warnings/returntype/pass/keypressedsimple.mod: New test.
	* gm2/warnings/returntype/pass/warnings-returntype-pass.exp:
	New test.

2023-01-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/avl_single-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-20.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-21.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-22.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-23.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-24.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-25.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-26.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-27.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-28.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-29.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-30.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-31.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-32.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-33.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-34.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-35.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-36.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-37.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-38.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-39.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-40.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-41.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-42.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-43.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-44.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-45.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-46.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-47.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-48.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-49.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-50.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-51.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-52.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-53.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-54.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-55.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-56.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-57.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-58.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-59.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-60.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-61.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-62.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-63.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-64.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-65.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-66.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-67.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-68.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-69.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-14.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-15.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-16.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-17.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-18.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-19.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-70.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-71.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/avl_single-9.c: New test.

2023-01-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_bb_prop-9.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_conflict-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-10.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-11.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-12.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-13.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-14.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-15.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-16.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-17.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_loop_invariant-9.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-1.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-2.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-3.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-4.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-5.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-6.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-7.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-8.c: New test.
	* gcc.target/riscv/rvv/vsetvl/imm_switch-9.c: New test.

2023-01-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-27.c: Update
	testcase.
	* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-28.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_back_prop-45.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-25.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-26.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-27.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-28.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_bb_prop-3.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_conflict-7.c: Ditto.
	* gcc.target/riscv/rvv/vsetvl/vlmax_switch_vtype-12.c: Ditto.

2023-01-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vle-constraint-1.c:

2023-01-26  Ju-Zhe Zhong  <juzhe.zhong@rivai.ai>

	* gcc.target/riscv/rvv/base/vse-constraint-1.c: New test.

2023-01-26  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108544
	* gfortran.dg/pr108544.f90: New test.
	* gfortran.dg/pr96102b.f90: New test.

2023-01-26  Marek Polacek  <polacek@redhat.com>

	PR middle-end/108543
	* c-c++-common/asan/pointer-subtract-5.c: New test.
	* c-c++-common/asan/pointer-subtract-6.c: New test.
	* c-c++-common/asan/pointer-subtract-7.c: New test.
	* c-c++-common/asan/pointer-subtract-8.c: New test.

2023-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/108540
	* gcc.c-torture/execute/ieee/pr108540-1.c: New test.
	* gcc.c-torture/execute/ieee/pr108540-2.c: New test.

2023-01-26  Richard Sandiford  <richard.sandiford@arm.com>

	* c-c++-common/hwasan/arguments-3.c: Remove extraneous .*s.

2023-01-26  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/bfloat16_scalar_typecheck.c: Accept empty
	compound literals.

2023-01-26  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.dg/guality/pr36728-2.c: Update XFAILs for aarch64*-*-*.
	* gcc.dg/guality/pr54519-1.c: Likewise.
	* gcc.dg/guality/pr54519-3.c: Likewise.
	* gcc.dg/guality/pr54693-2.c: Likewise.
	* gcc.dg/guality/sra-1.c: Likewise.

2023-01-26  Richard Sandiford  <richard.sandiford@arm.com>

	* g++.target/aarch64/sve/pr99766.C: Disable warnings.

2023-01-26  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/sve/slp_13.c: Remove XFAILs.

2023-01-26  Marek Polacek  <polacek@redhat.com>

	PR c++/105300
	* g++.dg/cpp0x/udlit-error1.C: New test.

2023-01-26  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/108507
	* gcc.dg/analyzer/SARD-tc841-basic-00182-min.c: Add
	-Wno-stringop-overflow.

2023-01-26  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/108524
	* gcc.dg/analyzer/infinite-recursion-pr108524-1.c: New test.
	* gcc.dg/analyzer/infinite-recursion-pr108524-2.c: New test.
	* gcc.dg/analyzer/infinite-recursion-pr108524-qobject-json-parser.c:
	New test.

2023-01-26  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108547
	* gcc.dg/uninit-pr108547.c: New testcase.

2023-01-26  Siddhesh Poyarekar  <siddhesh@gotplt.org>

	PR tree-optimization/108522
	* gcc.dg/builtin-dynamic-object-size-0.c (DEFSTRUCT): New
	macro.
	(test_dynarray_struct_member_b, test_dynarray_struct_member_c,
	test_dynarray_struct_member_d,
	test_dynarray_struct_member_subobj_b,
	test_dynarray_struct_member_subobj_c,
	test_dynarray_struct_member_subobj_d): New tests.
	(main): Call them.

2023-01-26  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108503
	* g++.dg/gomp/pr108503.C: New test.

2023-01-26  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108523
	* gcc.dg/torture/pr108523.c: New testcase.

2023-01-25  Steve Kargl  <kargl@gcc.gnu.org>

	PR fortran/108528
	* gfortran.dg/pr108528.f90: New test.

2023-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108525
	* g++.dg/cpp23/static-operator-call5.C: New test.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vhaddq_n_s16.c: Add missing extern
	"C".
	* gcc.target/arm/mve/intrinsics/vhaddq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_n_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_n_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_n_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_n_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhaddq_x_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_n_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_n_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vhsubq_x_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_p_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmladavaxq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_n_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqaddq_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlahq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_m_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlashq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_s64.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_u64.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vsetq_lane_u8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vld2q_f16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vld2q_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vld2q_u8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqnegq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqnegq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqnegq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqnegq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqnegq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqnegq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_n_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_n_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_n_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmulhq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhxq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlsdhq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhxq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmlsdhq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmlashq_n_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhxq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqrdmladhq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqrdmladhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqrdmladhq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqdmladhxq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqdmladhxq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhxq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhxq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhxq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhxq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqdmladhq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqdmladhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqdmladhq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vqabsq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vqabsq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqabsq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqabsq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqabsq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vqabsq_s8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vcmulq_f16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vcmulq_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot180_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot270_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_rot90_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmulq_x_f32.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vcmlaq_f16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vcmlaq_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot180_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot180_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot180_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot180_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot270_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot270_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot270_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot270_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot90_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot90_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot90_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcmlaq_rot90_m_f32.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_f16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot270_x_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vcaddq_rot90_x_u8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_int_x_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_m_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_m_p8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_p8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_x_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulltq_poly_x_p8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_int_x_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_m_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_m_p8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_p8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_x_p16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmullbq_poly_x_p8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vmulhq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vmulhq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vmulhq_x_u8.c: Likewise.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vnegq_f16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vnegq_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_m_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_m_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_m_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_x_f16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_x_f32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vnegq_x_s8.c: Likewise.
	* gcc.target/arm/simd/mve-vneg.c: Update test.
	* gcc.target/arm/simd/mve-vshr.c: Likewise

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vclzq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks.  Use
	extern "C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vclzq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_m_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_m_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_m_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_u8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_u16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_u32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclzq_x_u8.c: Likewise.
	* gcc.target/arm/simd/mve-vclz.c: Update test.

2023-01-25  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/mve/intrinsics/vclsq_m_s16.c: Use
	check-function-bodies instead of scan-assembler checks. Use extern
	"C" for C++ testing.
	* gcc.target/arm/mve/intrinsics/vclsq_m_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_m_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_s8.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_x_s16.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_x_s32.c: Likewise.
	* gcc.target/arm/mve/intrinsics/vclsq_x_s8.c: Likewise.

2023-01-25  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/sve/acle/general-c/sizeless-1.c: Avoid
	"initializer element is not constant" error.
	* gcc.target/aarch64/sve/acle/general-c/sizeless-2.c: Likewise.

2023-01-25  Andre Vieira  <andre.simoesdiasvieira@arm.com>

	* lib/target-supports.exp (check_effective_target_vect_long_long): Add
	aarch64 to list of targets supporting long long vectorization.

2023-01-25  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/108498
	* gcc.c-torture/execute/pr108498-1.c: New test.
	* gcc.c-torture/execute/pr108498-2.c: New test.

2023-01-25  Siddhesh Poyarekar  <siddhesh@gotplt.org>
	    Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/108522
	* gcc.dg/builtin-dynamic-object-size-0.c
	(test_dynarray_struct_member): New test.
	(main): Call it.

2023-01-24  Jakub Jelinek  <jakub@redhat.com>

	PR c++/107329
	PR testsuite/108533
	* g++.dg/init/new51.C (size_t): New typedef.
	(RexxClass::operator new, RexxClass::operator delete): Use size_t
	instead of unsigned long.

2023-01-24  Jason Merrill  <jason@redhat.com>

	PR c++/108504
	* g++.dg/ext/pragma1.C: New test.

2023-01-24  Jason Merrill  <jason@redhat.com>

	PR c++/108526
	* g++.dg/cpp23/static-operator-call5.C: New test.

2023-01-24  Vladimir N. Makarov  <vmakarov@redhat.com>

	* gcc.target/pdp11/pdp11.exp: New.
	* gcc.target/pdp11/pr108388.c: New.

2023-01-24  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108529
	* gfortran.dg/pr108529.f90: New test.

2023-01-24  Andre Vieira  <andre.simoesdiasvieira@arm.com>

	* gcc.target/arm/mve/pr108177-1-run.c: New test.
	* gcc.target/arm/mve/pr108177-1.c: New test.
	* gcc.target/arm/mve/pr108177-10-run.c: New test.
	* gcc.target/arm/mve/pr108177-10.c: New test.
	* gcc.target/arm/mve/pr108177-11-run.c: New test.
	* gcc.target/arm/mve/pr108177-11.c: New test.
	* gcc.target/arm/mve/pr108177-12-run.c: New test.
	* gcc.target/arm/mve/pr108177-12.c: New test.
	* gcc.target/arm/mve/pr108177-13-run.c: New test.
	* gcc.target/arm/mve/pr108177-13.c: New test.
	* gcc.target/arm/mve/pr108177-14-run.c: New test.
	* gcc.target/arm/mve/pr108177-14.c: New test.
	* gcc.target/arm/mve/pr108177-2-run.c: New test.
	* gcc.target/arm/mve/pr108177-2.c: New test.
	* gcc.target/arm/mve/pr108177-3-run.c: New test.
	* gcc.target/arm/mve/pr108177-3.c: New test.
	* gcc.target/arm/mve/pr108177-4-run.c: New test.
	* gcc.target/arm/mve/pr108177-4.c: New test.
	* gcc.target/arm/mve/pr108177-5-run.c: New test.
	* gcc.target/arm/mve/pr108177-5.c: New test.
	* gcc.target/arm/mve/pr108177-6-run.c: New test.
	* gcc.target/arm/mve/pr108177-6.c: New test.
	* gcc.target/arm/mve/pr108177-7-run.c: New test.
	* gcc.target/arm/mve/pr108177-7.c: New test.
	* gcc.target/arm/mve/pr108177-8-run.c: New test.
	* gcc.target/arm/mve/pr108177-8.c: New test.
	* gcc.target/arm/mve/pr108177-9-run.c: New test.
	* gcc.target/arm/mve/pr108177-9.c: New test.
	* gcc.target/arm/mve/pr108177-main.x: New test include.
	* gcc.target/arm/mve/pr108177.x: New test include.

2023-01-24  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108474
	* g++.dg/cpp1z/decomp57.C: New test.
	* g++.dg/cpp1z/decomp58.C: New test.

2023-01-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	PR testsuite/107808
	* gcc.dg/vect/vect-bitfield-write-2.c: Require vect_long_long.
	* gcc.dg/vect/vect-bitfield-write-3.c: Likewise.

2023-01-24  Rainer Orth  <ro@CeBiTec.Uni-Bielefeld.DE>

	PR testsuite/104756
	* gcc.dg/vect/vect-fmax-1.c: Require vect_float.
	* gcc.dg/vect/vect-fmax-2.c: Likewise.
	* gcc.dg/vect/vect-fmax-3.c: Likewise.
	* gcc.dg/vect/vect-fmin-1.c: Likewise.
	* gcc.dg/vect/vect-fmin-2.c: Likewise.
	* gcc.dg/vect/vect-fmin-3.c: Likewise.

2023-01-24  Lulu Cheng  <chenglulu@loongson.cn>
	    Yang Yujie  <yangyujie@loongson.cn>

	PR target/107731
	* gcc.target/loongarch/tst-asm-const.c: Moved to...
	* gcc.target/loongarch/pr107731.c: ...here.

2023-01-24  Jason Merrill  <jason@redhat.com>

	PR c++/107303
	PR c++/107329
	* g++.dg/ext/builtin-shufflevector-5.C: New test.
	* g++.dg/init/new51.C: New test.

2023-01-23  Jason Merrill  <jason@redhat.com>

	PR c++/107267
	* g++.dg/cpp0x/move2.C: New test.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108502
	* gfortran.dg/pr108502.f90: New test.

2023-01-23  Marek Polacek  <polacek@redhat.com>

	PR c++/107797
	* g++.dg/warn/Wunused-value-1.C: New test.

2023-01-23  Jason Merrill  <jason@redhat.com>

	PR c++/108195
	* g++.dg/cpp0x/initlist-vect2.C: New test.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108501
	* gfortran.dg/pr108501.f90: New test.

2023-01-23  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108420
	* gfortran.dg/pr108420.f90: New test.

2023-01-23  Jason Merrill  <jason@redhat.com>

	PR c++/108496
	* g++.dg/template/explicit-instantiation5.C: New test.

2023-01-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>

	* g++.target/arm/pac-1.C: New test.
	* gcc.target/arm/pac-15.c: Likewise.

2023-01-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>

	* gcc.target/arm/multilib.exp (multilib_config "rmprofile"): Update
	tests.
	* gcc.target/arm/pac-12.c: New test.
	* gcc.target/arm/pac-13.c: Likewise.
	* gcc.target/arm/pac-14.c: Likewise.

2023-01-23  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>

	* gcc.target/arm/multilib.exp: Add tests for cortex-m85.

2023-01-23  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108482
	* gcc.dg/torture/pr108482.c: New testcase.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/bti-1.c: New testcase.
	* gcc.target/arm/bti-2.c: Likewise.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/pac.h : New file.
	* gcc.target/arm/pac-1.c : New test case.
	* gcc.target/arm/pac-2.c : Likewise.
	* gcc.target/arm/pac-3.c : Likewise.
	* gcc.target/arm/pac-4.c : Likewise.
	* gcc.target/arm/pac-5.c : Likewise.
	* gcc.target/arm/pac-6.c : Likewise.
	* gcc.target/arm/pac-7.c : Likewise.
	* gcc.target/arm/pac-8.c : Likewise.
	* gcc.target/arm/pac-9.c : Likewise.
	* gcc.target/arm/pac-10.c : Likewise.
	* gcc.target/arm/pac-11.c : Likewise.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>

	* gcc.target/arm/multilib.exp: Add pacbti related entries.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>
	    Tejas Belagod   <tbelagod@arm.com>

	* gcc.target/arm/acle/pacbti-m-predef-1.c: New test.
	* gcc.target/arm/acle/pacbti-m-predef-3.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-6.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-7.c: Likewise.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>
	    Tejas Belagod   <tbelagod@arm.com>

	* lib/target-supports.exp
	(check_effective_target_mbranch_protection_ok): New function.
	* gcc.target/arm/acle/pacbti-m-predef-2.c: New test.
	* gcc.target/arm/acle/pacbti-m-predef-4.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-5.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-8.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-9.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-10.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-11.c: Likewise.
	* gcc.target/arm/acle/pacbti-m-predef-12.c: Likewise.

2023-01-23  Andrea Corallo  <andrea.corallo@arm.com>
	    Tejas Belagod   <tbelagod@arm.com>

	* lib/target-supports.exp:
	(check_effective_target_arm_pacbti_hw): New.

2023-01-23  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108449
	* gcc.dg/pr108449.c: New testcase.

2023-01-23  Jason Merrill  <jason@redhat.com>

	PR c++/53288
	DR 1299
	* g++.dg/init/lifetime4.C: New test.

2023-01-22  Iain Sandoe  <iain@sandoe.co.uk>

	* gm2/case/pass/case-pass.exp: Update for removal of concatenated
	paths.
	* gm2/complex/pass/complex-pass.exp: Likewise.
	* gm2/coroutines/pim/run/pass/coroutines-pim-run-pass.exp: Likewise.
	* gm2/iso/analysis/fail/iso-analysis-fail.exp: Likewise.
	* gm2/iso/check/fail/iso-check-fail.exp: Likewise.
	* gm2/iso/fail/iso-fail.exp: Likewise.
	* gm2/iso/pass/iso-pass.exp: Likewise.
	* gm2/isolib/run/pass/isolib-run-pass.exp: Likewise.
	* gm2/pim/fail/pim-fail.exp: Likewise.
	* gm2/pim/pass/pim-pass.exp: Likewise.
	* gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp: Likewise.
	* gm2/pimlib/pass/pimlib-pass.exp: Likewise.
	* gm2/pimlib/run/pass/pimlib-run-pass.exp: Likewise.
	* gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp: Likewise.
	* gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp: Likewise.
	* gm2/projects/log/run/pass/hello/projects-log-run-pass-hello.exp: Likewise.
	* gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp: Likewise.
	* gm2/recover/pass/recover-pass.exp: Likewise.
	* gm2/switches/makeall/fail/switches-makeall-fail.exp: Likewise.
	* gm2/switches/makeall/pass/switches-makeall-pass.exp: Likewise.
	* gm2/switches/none/run/pass/gm2-none.exp: Likewise.
	* gm2/switches/pim2/run/pass/switches-pim2-run-pass.exp: Likewise.
	* gm2/ulmlib/pass/ulmlib-pass.exp: Likewise.
	* gm2/ulmlib/std/pass/ulmlib-std-pass.exp: Likewise.
	* gm2/ulmlib/sys/pass/ulmlib-sys-pass.exp: Likewise.
	* lib/gm2.exp: Make the paths list a mandatory entry for each gm2_init_xxx
	function. Remove the use of concatenated include and library paths.
	Remove string processing where possible.

2023-01-22  Dimitar Dimitrov  <dimitar@dinux.eu>

	* gcc.target/pru/clz-hi-2.c: New test.
	* gcc.target/pru/clz-hi.c: New test.

2023-01-21  Jerry DeLisle  <jvdelisle@gcc.gnu.org>

	PR fortran/102595
	* gfortran.dg/pr88048.f90: Adjust for changed error message.
	* gfortran.dg/parameter_data0.f90: New test.

2023-01-20  Tejas Belagod  <tejas.belagod@arm.com>

	* gcc.target/aarch64/acle/pmull64.c: New.
	* gcc.target/aarch64/aes-fuse-1.c: Replace '+crypto' with corresponding
	feature flag based on the intrinsic.
	* gcc.target/aarch64/aes-fuse-2.c: Likewise.
	* gcc.target/aarch64/aes_1.c: Likewise.
	* gcc.target/aarch64/aes_2.c: Likewise.
	* gcc.target/aarch64/aes_xor_combine.c: Likewise.
	* gcc.target/aarch64/sha1_1.c: Likewise.
	* gcc.target/aarch64/sha256_1.c: Likewise.
	* gcc.target/aarch64/target_attr_crypto_ice_1.c: Likewise.

2023-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108437
	* g++.dg/cpp23/subscript12.C: New test.
	* g++.dg/cpp23/subscript13.C: New test.

2023-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR c++/53932
	* g++.dg/init/pr53932.C: New test.

2023-01-19  H.J. Lu  <hjl.tools@gmail.com>

	* gcc.target/i386/pr108436.c: New test.

2023-01-19  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/108455
	* gcc.dg/analyzer/deref-before-check-1.c: Add test coverage
	involving dominance.
	* gcc.dg/analyzer/deref-before-check-pr108455-1.c: New test.
	* gcc.dg/analyzer/deref-before-check-pr108455-git-pack-revindex.c:
	New test.

2023-01-19  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108434
	* gfortran.dg/pr108434.f90: New test.

2023-01-19  Iain Sandoe  <iain@sandoe.co.uk>

	* gm2/complex/run/pass/complex-run-pass.exp: Remove gm2_link_lib.
	* gm2/iso/run/pass/iso-run-pass.exp: Likewise.
	* gm2/link/externalscaffold/pass/link-externalscaffold-pass.exp:
	* gm2/pimlib/logitech/run/pass/pimlib-logitech-run-pass.exp: Likewise.
	* gm2/pimlib/run/pass/pimlib-run-pass.exp: Likewise.
	* gm2/projects/iso/run/pass/halma/projects-iso-run-pass-halma.exp:
	Likewise.
	* gm2/projects/iso/run/pass/hello/projects-iso-run-pass-hello.exp:
	Likewise.
	* gm2/projects/pim/run/pass/hello/projects-pim-run-pass-hello.exp:
	Likewise.
	* gm2/sets/run/pass/sets-run-pass.exp: Likewise.
	* gm2/switches/none/run/pass/gm2-none.exp: Likewise.
	* gm2/switches/pic/run/pass/switches-pic-run-pass.exp: Likewise.
	* gm2/projects/pim/run/pass/random/projects-pim-run-pass-random.exp:
	Likewise, and also ensure that the -g option is appended to avoid it
	being taken as a path.
	* lib/gm2.exp: Ensure for each gm2_init_xxxx function that the set of
	libraries added matches the set of -I and -L options.

2023-01-19  Christophe Lyon  <christophe.lyon@arm.com>

	PR target/108411
	* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: Add
	-fno-stack-protector.
	* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: Likewise.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: Likewise.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: Likewise.
	* g++.target/aarch64/bitfield-abi-warning-align8-O2.C: Likewise.
	* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: Likewise.
	* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: Likewise.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: Likewise.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: Likewise.
	* gcc.target/aarch64/bitfield-abi-warning-align8-O2.c: Likewise.

2023-01-19  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/108440
	* c-c++-common/rotate-10.c: New test.
	* c-c++-common/rotate-11.c: New test.

2023-01-19  Alexandre Oliva  <oliva@adacore.com>

	PR debug/106746
	* gcc.target/i386/pr106746.c: New.

2023-01-18  Marek Polacek  <polacek@redhat.com>

	PR c/108424
	* gcc.dg/c2x-nullptr-6.c: New test.

2023-01-18  David Malcolm  <dmalcolm@redhat.com>

	* gcc.dg/analyzer/SARD-tc117-basic-00001-min.c: New test, adapted
	from https://samate.nist.gov/SARD/test-suites/81.
	* gcc.dg/analyzer/SARD-tc1909-stack_overflow_loop.c: Likewise.
	* gcc.dg/analyzer/SARD-tc249-basic-00034-min.c: Likewise.
	* gcc.dg/analyzer/SARD-tc293-basic-00045-min.c: Likewise.
	* gcc.dg/analyzer/SARD-tc841-basic-00182-min.c: Likewise.

2023-01-18  Richard Biener  <rguenther@suse.de>

	PR lto/108445
	* gcc.dg/lto/pr108445_0.c: New testcase.
	* gcc.dg/lto/pr108445_1.c: Likewise.

2023-01-18  Murray Steele  <murray.steele@arm.com>

	* gcc.target/arm/mve/general/preserve_user_namespace_1.c: New test.

2023-01-18  Kewen Lin  <linkw@linux.ibm.com>
	    Andrew Pinski  <apinski@marvell.com>

	PR target/108396
	* gcc.target/powerpc/pr108396.c: New test.

2023-01-18  Kewen Lin  <linkw@linux.ibm.com>

	PR target/108348
	* gcc.target/powerpc/pr108348-1.c: New test.
	* gcc.target/powerpc/pr108348-2.c: New test.

2023-01-17  Harald Anlauf  <anlauf@gmx.de>

	PR fortran/108421
	* gfortran.dg/pr108421.f90: New test.

2023-01-17  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/106523
	* c-c++-common/rotate-2.c (f5, f6, f7, f8, f13, f14, f15, f16,
	f37, f38, f39, f40, f45, f46, f47, f48): Add assertions using
	__builtin_unreachable about shift count.
	* c-c++-common/rotate-2b.c: New test.
	* c-c++-common/rotate-4.c (f5, f6, f7, f8, f13, f14, f15, f16,
	f37, f38, f39, f40, f45, f46, f47, f48): Add assertions using
	__builtin_unreachable about shift count.
	* c-c++-common/rotate-4b.c: New test.
	* gcc.c-torture/execute/pr106523.c: New test.

2023-01-16  Andrew Pinski  <apinski@marvell.com>

	* lib/target-supports.exp (add_options_for_tls): Remove
	reference to Solaris 9 in comments.

2023-01-16  H.J. Lu  <hjl.tools@gmail.com>

	PR target/105980
	* g++.target/i386/pr105980.C: New test.

2023-01-16  Jan Hubicka  <hubicka@ucw.cz>

	* g++.dg/tree-ssa/pr106077.C: New test.

2023-01-16  Stam Markianos-Wright  <stam.markianos-wright@arm.com>

	PR target/96795
	PR target/107515
	* gcc.target/arm/mve/intrinsics/mve_intrinsic_type_overloads-fp.c: New test.
	* gcc.target/arm/mve/intrinsics/mve_intrinsic_type_overloads-int.c: New test.

2023-01-16  Andrew Carlotti  <andrew.carlotti@arm.com>

	* g++.dg/tree-ssa/pr86544.C: Add .POPCOUNT to tree scan regex.
	* gcc.dg/tree-ssa/popcount.c: Likewise.
	* gcc.dg/tree-ssa/popcount2.c: Likewise.
	* gcc.dg/tree-ssa/popcount3.c: Likewise.
	* gcc.target/aarch64/popcount4.c: Likewise.
	* gcc.target/i386/pr95771.c: Likewise, and...
	* gcc.target/i386/pr95771-2.c: ...split int128 test from above,
	since this would emit just a single IFN if a TI optab is added.

2023-01-16  Andrew Carlotti  <andrew.carlotti@arm.com>

	* gcc.dg/tree-ssa/cltz-max.c: New test.
	* gcc.dg/tree-ssa/clz-char.c: New test.
	* gcc.dg/tree-ssa/clz-int.c: New test.
	* gcc.dg/tree-ssa/clz-long-long.c: New test.
	* gcc.dg/tree-ssa/clz-long.c: New test.
	* gcc.dg/tree-ssa/ctz-char.c: New test.
	* gcc.dg/tree-ssa/ctz-int.c: New test.
	* gcc.dg/tree-ssa/ctz-long-long.c: New test.
	* gcc.dg/tree-ssa/ctz-long.c: New test.

2023-01-16  Andrew Carlotti  <andrew.carlotti@arm.com>

	* lib/target-supports.exp (check_effective_target_clz)
	(check_effective_target_clzl, check_effective_target_clzll)
	(check_effective_target_ctz, check_effective_target_clzl)
	(check_effective_target_ctzll): New.
	* gcc.dg/tree-ssa/cltz-complement-max.c: New test.
	* gcc.dg/tree-ssa/clz-complement-char.c: New test.
	* gcc.dg/tree-ssa/clz-complement-int.c: New test.
	* gcc.dg/tree-ssa/clz-complement-long-long.c: New test.
	* gcc.dg/tree-ssa/clz-complement-long.c: New test.
	* gcc.dg/tree-ssa/ctz-complement-char.c: New test.
	* gcc.dg/tree-ssa/ctz-complement-int.c: New test.
	* gcc.dg/tree-ssa/ctz-complement-long-long.c: New test.
	* gcc.dg/tree-ssa/ctz-complement-long.c: New test.

2023-01-16  Jakub Jelinek  <jakub@redhat.com>

	PR c++/105593
	* g++.target/i386/pr105593.C: New test.

2023-01-16  Jakub Jelinek  <jakub@redhat.com>

	PR c++/105593
	* c-c++-common/Winit-self3.c: New test.
	* c-c++-common/Winit-self4.c: New test.
	* c-c++-common/Winit-self5.c: New test.

2023-01-16  Kewen Lin  <linkw@linux.ibm.com>

	PR target/108272
	* gcc.target/powerpc/pr108272-1.c: New test.
	* gcc.target/powerpc/pr108272-2.c: New test.
	* gcc.target/powerpc/pr108272-3.c: New test.
	* gcc.target/powerpc/pr108272-4.c: New test.

2023-01-14  Prathamesh Kulkarni  <prathamesh.kulkarni@linaro.org>

	* gcc.target/aarch64/sve/acle/general/pr96463-2.c: Adjust.

2023-01-14  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108365
	* c-c++-common/pr108365.c: New test.
	* g++.dg/opt/pr108365.C: New test.
	* g++.dg/warn/pr108365.C: New test.

2023-01-14  Alexandre Oliva  <oliva@adacore.com>

	PR target/42093
	* gcc.target/arm/pr42093.c: Disable tree-dce.

2023-01-13  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/105273
	* gcc.dg/analyzer/switch-enum-1.c: New test.
	* gcc.dg/analyzer/switch-enum-2.c: New test.
	* gcc.dg/analyzer/switch-enum-pr105273-git-vreportf-2.c: New test.
	* gcc.dg/analyzer/switch-enum-taint-1.c: New test.
	* gcc.dg/analyzer/switch-wrong-enum.c: New test.
	* gcc.dg/analyzer/torture/switch-enum-pr105273-doom-p_floor.c: New
	test.
	* gcc.dg/analyzer/torture/switch-enum-pr105273-doom-p_maputl.c:
	New test.
	* gcc.dg/analyzer/torture/switch-enum-pr105273-git-vreportf-1.c:
	New test.

2023-01-13  Alexander Monakov  <amonakov@ispras.ru>

	PR rtl-optimization/108117
	PR rtl-optimization/108132
	* gcc.dg/pr108117.c: New test.

2023-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108285
	* g++.dg/warn/pr108285.C: New test.

2023-01-13  Gaius Mulley  <gaiusmod2@gmail.com>

	* gm2/examples/map/pass/examples-map-pass.exp:
	Call gm2_push_timeout 30 before foreach testcase.
	Call gm2_pop_timeout after the foreach statement.
	* gm2/pimlib/base/run/pass/pimlib-base-run-pass.exp:
	Call gm2_push_timeout 20 before foreach testcase.
	Call gm2_pop_timeout after the foreach statement.

2023-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR target/107131
	* gcc.c-torture/execute/pr107131.c: New test.

2023-01-13  Srinath Parvathaneni  <srinath.parvathaneni@arm.com>

	* gcc.target/arm/multilib.exp: Add multilib tests for Cortex-M55 CPU.

2023-01-13  Qing Zhao  <qing.zhao@oracle.com>

	* gcc.dg/Warray-bounds-flex-arrays-1.c: Delete the level information
	from the message issued by -Wstrict-flex-arrays.
	* gcc.dg/Warray-bounds-flex-arrays-2.c: Likewise.
	* gcc.dg/Warray-bounds-flex-arrays-3.c: Likewise.
	* gcc.dg/Warray-bounds-flex-arrays-4.c: Likewise.
	* gcc.dg/Warray-bounds-flex-arrays-5.c: Likewise.
	* gcc.dg/Warray-bounds-flex-arrays-6.c: Likewise.
	* gcc.dg/Wstrict-flex-arrays-2.c: Likewise.
	* gcc.dg/Wstrict-flex-arrays-3.c: Likewise.
	* gcc.dg/Wstrict-flex-arrays.c: Likewise.

2023-01-13  Jakub Jelinek  <jakub@redhat.com>

	PR target/107131
	* gcc.dg/pr107131.c: New test.

2023-01-13  Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/dwarf_reg_size_1.c: New test.
	* gcc.target/aarch64/dwarf_reg_size_2.c: Likewise.

2023-01-13  Richard Biener  <rguenther@suse.de>

	* gcc.target/aarch64/pr107209.c: New test.

2023-01-13  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108387
	* gcc.dg/pr108387.c: New testcase.

2023-01-13  Gaius Mulley  <gaiusmod2@gmail.com>

	* gm2/coroutines/pim/run/pass/coroutines-pim-run-pass.exp
	(timeout-dg.exp): Load.
	Call gm2_push_timeout 15.
	Call gm2_pop_timeout at the end.
	* gm2/link/min/pass/link-min-pass.exp: Set path
	argument to "".
	* gm2/switches/whole-program/pass/run/switches-whole-program-pass-run.exp:
	Call gm2_push_timeout 60.
	Call gm2_pop_timeout at the end.
	* lib/gm2-torture.exp (gm2_previous_timeout): Set to 10 or
	individual_timeout.
	Configure dejagnu to timeout for 10 seconds.
	(gm2_push_timeout): New proc.
	(gm2_pop_timeout): New proc.
	* lib/gm2.exp (gm2_previous_timeout): Set to 10 or
	individual_timeout.
	Configure dejagnu to timeout for 10 seconds.
	(gm2_push_timeout): New proc.
	(gm2_pop_timeout): New proc.

2023-01-12  Gaius Mulley  <gaiusmod2@gmail.com>

	* lib/gm2.exp: Use timeout.exp.

2023-01-12  Gaius Mulley  <gaiusmod2@gmail.com>

	* lib/gm2.exp (gm2_init_min): Append -fno-exceptions
	to args.

2023-01-12  Andrew Pinski  <apinski@marvell.com>
	    Roger Sayle  <roger@nextmovesoftware.com>

	PR tree-optimization/92342
	* gcc.dg/tree-ssa/andnegcmp-1.c: New test.
	* gcc.dg/tree-ssa/andnegcmp-2.c: New test.
	* gcc.dg/tree-ssa/multcmp-1.c: New test.
	* gcc.dg/tree-ssa/multcmp-2.c: New test.

2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>
	    Richard Sandiford  <richard.sandiford@arm.com>

	PR target/105549
	* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: Update.
	* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: Update.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: Update.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: Update.
	* gcc.target/aarch64/aapcs64/va_arg-17.c: New test.
	* gcc.target/aarch64/pr105549.c: New test.
	* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: Update.
	* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: Update.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: Update.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: Update.

2023-01-12  Christophe Lyon  <christophe.lyon@arm.com>
	    Richard Sandiford  <richard.sandiford@arm.com>

	* gcc.target/aarch64/bitfield-abi-warning-align16-O2.c: New test.
	* gcc.target/aarch64/bitfield-abi-warning-align16-O2-extra.c: New
	test.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2.c: New test.
	* gcc.target/aarch64/bitfield-abi-warning-align32-O2-extra.c: New
	test.
	* gcc.target/aarch64/bitfield-abi-warning-align8-O2.c: New test.
	* gcc.target/aarch64/bitfield-abi-warning.h: New test.
	* g++.target/aarch64/bitfield-abi-warning-align16-O2.C: New test.
	* g++.target/aarch64/bitfield-abi-warning-align16-O2-extra.C: New
	test.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2.C: New test.
	* g++.target/aarch64/bitfield-abi-warning-align32-O2-extra.C: New
	test.
	* g++.target/aarch64/bitfield-abi-warning-align8-O2.C: New test.
	* g++.target/aarch64/bitfield-abi-warning.h: New test.

2023-01-12  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/99412
	* gcc.dg/vect/pr99412.c: New testcase.
	* gcc.dg/tree-ssa/reassoc-47.c: Adjust comment.
	* gcc.dg/tree-ssa/reassoc-48.c: Remove.

2023-01-12  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/107706
	* gfortran.dg/gomp/assume-2.f90: Update dg-error.
	* gfortran.dg/gomp/assumes-2.f90: Likewise.
	* gfortran.dg/gomp/assume-5.f90: New test.

2023-01-12  Lewis Hyatt  <lhyatt@gmail.com>

	* c-c++-common/cpp/pr108244-1.c: New test.
	* c-c++-common/cpp/pr108244-2.c: New test.
	* c-c++-common/gomp/pr108244-3.c: New test.

2023-01-11  David Malcolm  <dmalcolm@redhat.com>

	PR analyzer/108252
	* gcc.dg/analyzer/attr-malloc-pr108252.c: New test.
	* gcc.dg/analyzer/fd-leak-pr108252.c: New test.
	* gcc.dg/analyzer/flex-with-call-summaries.c: Remove xfail from
	warning false +ve directives.
	* gcc.dg/analyzer/pr103217-2.c: Add -Wno-analyzer-too-complex.
	* gcc.dg/analyzer/pr103217-3.c: Likewise.
	* gcc.dg/analyzer/strdup-pr108252.c: New test.
	* gcc.dg/analyzer/strndup-pr108252.c: New test.

2023-01-11  Jakub Jelinek  <jakub@redhat.com>

	PR c/105972
	* gcc.dg/pr105972.c: New test.

2023-01-11  Roger Sayle  <roger@nextmovesoftware.com>

	PR tree-optimization/71343
	* gcc.dg/pr71343-2.c: New test case.

2023-01-11  David Faust  <david.faust@oracle.com>

	PR target/108293
	* gcc.target/bpf/double-1.c: New test.
	* gcc.target/bpf/double-2.c: New test.
	* gcc.target/bpf/float-1.c: New test.

2023-01-11  Eric Botcazou  <ebotcazou@adacore.com>

	* gcc.dg/sso-17.c: New test.

2023-01-11  Kewen Lin  <linkw@linux.ibm.com>

	* gcc.target/powerpc/ppc-fortran/ppc-fortran.exp: Exit immediately if
	the testing target isn't a PowerPC target.

2023-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/107767
	* gcc.dg/tree-ssa/pr107767.c: New testcase.

2023-01-11  Jakub Jelinek  <jakub@redhat.com>

	PR target/108308
	* gcc.dg/pr108308.c: Use int32 target rather than { ilp32 || lp64 }.

2023-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108352
	* gcc.dg/tree-ssa/ssa-thread-21.c: New testcase.
	* gcc.dg/tree-ssa/vrp46.c: Remove --param fsm-scale-path-blocks=1.

2023-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108353
	* gcc.dg/tree-ssa/ssa-copyprop-3.c: New testcase.

2023-01-11  Andreas Krebbel  <krebbel@linux.ibm.com>

	* gcc.target/s390/not.c: New test.

2023-01-11  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/106293
	* gcc.dg/tree-ssa/ssa-dse-46.c: Remove long initializer.

2023-01-10  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/106293
	* gcc.dg/tree-ssa/ssa-dse-46.c: New testcase.

2023-01-10  Roger Sayle  <roger@nextmovesoftware.com>

	PR rtl-optimization/106421
	* gcc.dg/pr106421.c: New test case.

2023-01-10  Martin Jambor  <mjambor@suse.cz>

	PR ipa/108110
	* g++.dg/ipa/pr108110.C: New test.

2023-01-10  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/108314
	* gcc.dg/vect/pr108314.c: New testcase.

2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>

	* gcc.target/csky/ldbs.c : Fix exclude-opts, should not
	be "*".

2023-01-10  Xianmiao Qu  <cooper.qu@linux.alibaba.com>

	* gcc.target/csky/and3a.c: Rename to ...
	* gcc.target/csky/ck801-and.c: ... this.
	* gcc.target/csky/constpool-3.c: Rename to ...
	* gcc.target/csky/constpool-2.c: ... this, Rename to ...
	* gcc.target/csky/constpool-1.c: ... this, Rename to ...
	* gcc.target/csky/ck801-constpool.c: ... this, and skip
	if the CPU is not ck801.
	* gcc.target/csky/ck801-branch.c: Skip if the CPU is not ck801.

2023-01-10  Andreas Krebbel  <krebbel@linux.ibm.com>

	* gcc.target/s390/fcall-saved.c: New test.

2023-01-09  Jakub Jelinek  <jakub@redhat.com>

	PR c++/105838
	PR c++/108047
	PR c++/108266
	* g++.dg/tree-ssa/initlist-opt2.C: New test.
	* g++.dg/tree-ssa/initlist-opt3.C: New test.

2023-01-09  Joseph Myers  <joseph@codesourcery.com>

	* gcc.dg/c2x-complit-8.c: New test.

2023-01-09  Richard Biener  <rguenther@suse.de>

	PR middle-end/69482
	* gcc.target/i386/pr69482-1.c: New testcase.
	* gcc.target/i386/pr69482-2.c: Likewise.

2023-01-09  Martin Liska  <mliska@suse.cz>

	PR lto/108330
	* g++.dg/ipa/pr108830.C: New test.

2023-01-09  Richard Biener  <rguenther@suse.de>

	PR tree-optimization/101912
	* gcc.dg/uninit-pr101912.c: New testcase.

2023-01-09  Martin Liska  <mliska@suse.cz>

	PR c/107993
	* gcc.target/i386/pr107993.c: New test.

2023-01-07  John David Anglin  <danglin@gcc.gnu.org>

	* gcc.dg/atomic/c11-atomic-exec-4.c: Add "-D_HPUX_SOURCE" option
	on *-*-hpux*.
	* gcc.dg/atomic/c11-atomic-exec-5.c: Likewise.

2023-01-06  Joseph Myers  <joseph@codesourcery.com>

	* gcc.dg/builtin-tgmath-3.c: Update expectations and add more
	tests.

2023-01-06  Tamar Christina  <tamar.christina@arm.com>

	Revert:
	2023-01-06  Tamar Christina  <tamar.christina@arm.com>

	* gcc.target/aarch64/sve/slp_1.c: Update testcase.

2023-01-06  Jakub Jelinek  <jakub@redhat.com>

	PR target/108292
	PR target/108308
	* gcc.c-torture/execute/pr108292.c: New test.
	* gcc.target/i386/pr108292.c: New test.
	* gcc.dg/pr108308.c: New test.

2023-01-05  Roger Sayle  <roger@nextmovesoftware.com>

	Revert:
	2023-01-05  Roger Sayle  <roger@nextmovesoftware.com>

	* gcc.target/i386/cmov10.c: New test case.

2023-01-05  Patrick Palka  <ppalka@redhat.com>

	PR c++/108275
	* g++.dg/parse/access14.C: New test.

2023-01-05  Gaius Mulley  <gaiusmod2@gmail.com>

	* lib/gm2.exp (gm2_init_minx): New procedure.
	(gm2_init_min): New procedure calls gm2_init_min with
	dialect flags.
	* gm2/link/min/pass/tiny.mod: New test case.
	* gm2/link/min/pass/link-min-pass.exp: New file.

2023-01-04  Patrick Palka  <ppalka@redhat.com>

	PR c++/108282
	* g++.dg/cpp2a/concepts-requires34.C: New test.

2023-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR c++/108206
	* g++.dg/template/pr108206.C: New test.

2023-01-04  Iain Sandoe  <iain@sandoe.co.uk>

	* gm2/iso/pass/realbitscast.mod: Disable REAL96 on Darwin.

2023-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR tree-optimization/108253
	* g++.dg/opt/pr108253.C: New test.

2023-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/108237
	* gcc.c-torture/compile/pr108237.c: New test.

2023-01-04  Jakub Jelinek  <jakub@redhat.com>

	PR sanitizer/108256
	* c-c++-common/ubsan/pr108256.c: New test.

2023-01-03  David Edelsohn  <dje.gcc@gmail.com>

	* g++.dg/modules/modules.exp: Skip on AIX.
	* gcc.target/powerpc/pr99708.c: Skip on AIX.

2023-01-03  Sandra Loosemore  <sandra@codesourcery.com>

	* g++.dg/gomp/target-simd-clone-1.C: Tweak to test
	that the unused clone is GC'ed.
	* gcc.dg/gomp/target-simd-clone-1.c: Likewise.

2023-01-03  Roger Sayle  <roger@nextmovesoftware.com>

	* gcc.target/i386/cmov10.c: New test case.

2023-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR middle-end/108264
	* gcc.dg/pr108264.c: New test.

2023-01-03  Jakub Jelinek  <jakub@redhat.com>

	PR rtl-optimization/108263
	* gcc.dg/pr108263.c: New test.

2023-01-01  Roger Sayle  <roger@nextmovesoftware.com>
	    Uroš Bizjak  <ubizjak@gmail.com>

	* gcc.target/i386/extendditi2-1.c: New test case.
	* gcc.target/i386/extendditi2-2.c: Likewise.


Copyright (C) 2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
