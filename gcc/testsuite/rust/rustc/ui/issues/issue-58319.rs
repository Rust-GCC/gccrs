// run-pass
fn main() {}
#[derive(Clone)]
pub struct Little;
#[derive(Clone)]
pub struct Big(
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
    Little,
);

