#   Copyright (C) 2005-2023 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# GCC testsuite that uses the `gcc-dg.exp' driver, just a single option, no
# looping over tests.

# Exit immediately if this isn't a CRIS target.
if { ![istarget cris-*-*] } then {
  return
}

# Load support procs.
load_lib gcc-dg.exp

# For the time being, provide a means to tell whether the target is "cc0".
# Some targets may split cbranch and cstore late, but for a cc0-target,
# all the fun happens at "final" time, so this should be a safe time for
# a scan.
proc check_effective_target_cc0 { } {
    return [check_no_messages_and_pattern cc0 "\\(cc0\\)" rtl-final {
	extern void g (void);
	void f (int *p, int *q) { *q = *p == 42; if (*p == 7) g (); }
    }]
}

# If a testcase doesn't have special options, use these.
global DEFAULT_CFLAGS
if ![info exists DEFAULT_CFLAGS] then {
    set DEFAULT_CFLAGS " -ansi -pedantic-errors"
}

# Initialize `dg'.
dg-init

# Main loop.
dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\[cS\]]] "" $DEFAULT_CFLAGS

# All done.
dg-finish
