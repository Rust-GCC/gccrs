/* do not edit automatically generated by mc from NumberIO.  */
/* NumberIO.def provides conversion of ordinal numbers.

Copyright (C) 2001-2023 Free Software Foundation, Inc.
Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.

This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GNU Modula-2 is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

Under Section 7 of GPL version 3, you are granted additional
permissions described in the GCC Runtime Library Exception, version
3.1, as published by the Free Software Foundation.

You should have received a copy of the GNU General Public License and
a copy of the GCC Runtime Library Exception along with this program;
see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
<http://www.gnu.org/licenses/>.  */


#if !defined (_NumberIO_H)
#   define _NumberIO_H

#include "config.h"
#include "system.h"
#   ifdef __cplusplus
extern "C" {
#   endif
#   if !defined (PROC_D)
#      define PROC_D
       typedef void (*PROC_t) (void);
       typedef struct { PROC_t proc; } PROC;
#   endif


#   if defined (_NumberIO_C)
#      define EXTERN
#   else
#      define EXTERN extern
#   endif

EXTERN void NumberIO_ReadCard (unsigned int *x);
EXTERN void NumberIO_WriteCard (unsigned int x, unsigned int n);
EXTERN void NumberIO_ReadHex (unsigned int *x);
EXTERN void NumberIO_WriteHex (unsigned int x, unsigned int n);
EXTERN void NumberIO_ReadInt (int *x);
EXTERN void NumberIO_WriteInt (int x, unsigned int n);
EXTERN void NumberIO_CardToStr (unsigned int x, unsigned int n, char *a, unsigned int _a_high);
EXTERN void NumberIO_StrToCard (const char *a_, unsigned int _a_high, unsigned int *x);
EXTERN void NumberIO_HexToStr (unsigned int x, unsigned int n, char *a, unsigned int _a_high);
EXTERN void NumberIO_StrToHex (const char *a_, unsigned int _a_high, unsigned int *x);
EXTERN void NumberIO_IntToStr (int x, unsigned int n, char *a, unsigned int _a_high);
EXTERN void NumberIO_StrToInt (const char *a_, unsigned int _a_high, int *x);
EXTERN void NumberIO_ReadOct (unsigned int *x);
EXTERN void NumberIO_WriteOct (unsigned int x, unsigned int n);
EXTERN void NumberIO_OctToStr (unsigned int x, unsigned int n, char *a, unsigned int _a_high);
EXTERN void NumberIO_StrToOct (const char *a_, unsigned int _a_high, unsigned int *x);
EXTERN void NumberIO_ReadBin (unsigned int *x);
EXTERN void NumberIO_WriteBin (unsigned int x, unsigned int n);
EXTERN void NumberIO_BinToStr (unsigned int x, unsigned int n, char *a, unsigned int _a_high);
EXTERN void NumberIO_StrToBin (const char *a_, unsigned int _a_high, unsigned int *x);
EXTERN void NumberIO_StrToBinInt (const char *a_, unsigned int _a_high, int *x);
EXTERN void NumberIO_StrToHexInt (const char *a_, unsigned int _a_high, int *x);
EXTERN void NumberIO_StrToOctInt (const char *a_, unsigned int _a_high, int *x);
#   ifdef __cplusplus
}
#   endif

#   undef EXTERN
#endif
