/* do not edit automatically generated by mc from mcflex.  */
/* mcflex.def provides a Modula-2 definition module for the C lexical.

Copyright (C) 2015-2023 Free Software Foundation, Inc.
Contributed by Gaius Mulley <gaius.mulley@southwales.ac.uk>.

This file is part of GNU Modula-2.

GNU Modula-2 is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GNU Modula-2 is distributed in the hope that it will be useful, but
WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Modula-2; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */


#if !defined (_mcflex_H)
#   define _mcflex_H

#include "config.h"
#include "system.h"
#   ifdef __cplusplus
extern "C" {
#   endif
#   if !defined (PROC_D)
#      define PROC_D
       typedef void (*PROC_t) (void);
       typedef struct { PROC_t proc; } PROC;
#   endif

#   include "GSYSTEM.h"

#   if defined (_mcflex_C)
#      define EXTERN
#   else
#      define EXTERN extern
#   endif


/*
   closeSource - provided for semantic sugar
*/

EXTERN void mcflex_closeSource (void);
EXTERN unsigned int mcflex_openSource (void * s);

/*
   getToken - returns the ADDRESS of the next token.
*/

EXTERN void * mcflex_getToken (void);

/*
   getLineNo - returns the current line number.
*/

EXTERN unsigned int mcflex_getLineNo (void);

/*
   getColumnNo - returns the column where the current token starts.
*/

EXTERN unsigned int mcflex_getColumnNo (void);

/*
   mcError - displays the error message, s, after the code line and pointer
             to the erroneous token.
*/

EXTERN void mcflex_mcError (void * s);

/*
   getTotalLines - returns the total number of lines parsed.
*/

EXTERN unsigned int mcflex_getTotalLines (void);
#   ifdef __cplusplus
}
#   endif

#   undef EXTERN
#endif
